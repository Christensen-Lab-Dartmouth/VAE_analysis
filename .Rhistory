png('Node_activationsPAM50_all.png', width = 5000, height = 2000, res = 100)
ggboxplot(temp, x = "Node", y = "Activation",
color = "PAM50orNormal") + stat_compare_means(label.y = 4)
dev.off()
temp = temp[temp$PAM50 != '', ]
temp = temp[temp$PAM50 != '', ]
png('Node_activationsPAM50_all.png', width = 5000, height = 2000, res = 200)
ggboxplot(temp, x = "Node", y = "Activation",
color = "PAM50orNormal") + stat_compare_means(label.y = 4)
dev.off()
png('Node_activationsPAM50_all.png', width = 5000, height = 2000, res = 200)
ggboxplot(temp, x = "Node", y = "Activation",
color = "SampleType") + stat_compare_means(label.y = 4)
dev.off()
png('Node_activationsPAM50_all.png', width = 5000, height = 2000, res = 200)
ggboxplot(temp, x = "Node", y = "Activation",
color = "SampleType") + stat_compare_means(label.y = 7)
dev.off()
png('Node_activationsPAM50_all.png', width = 5000, height = 2000, res = 200)
ggboxplot(temp, x = "Node", y = "Activation",
color = "SampleTypeInt") + stat_compare_means(label.y = 7)
dev.off()
dev.off()
node = 'All'
View(info)
threshold = 0.6
node = 1
correlations = correlations1
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpgs = rownames(cor.sub)
cpg_set = cor.sub
node = 40
correlations = correlations40
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpgs = rownames(cor.sub)
cpg_set = rbind(cpg_set, cor.sub)
View(cpg_set)
threshold = 0.6
node = 40
threshold = 0.6
node = 1
correlations = correlations1
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
View(cor.sub)
cpg_set = cor.sub
node = 40
correlations = correlations40
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = rbind(cpg_set, cor.sub)
View(cor.sub)
node = 1
vaeNode = vae[, as.character(node)]
cor.func = function(x){return(cor(x, vaeNode))}
betas = t(betas)
correlations = apply(betas, 2, cor.func)
correlations = data.frame(correlations)
correlations = cbind('CpG' = rownames(correlations), correlations)
nodeLabel = paste('VAE', node, sep = '')
correlations = cbind(nodeLabel = rep(nodeLabel, nrow(correlations)), correlations)
correlations1 = correlations[order(abs(correlations$correlations), decreasing=T), ]
threshold = 0.6
node = 1
correlations = correlations1
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = cor.sub
node = 40
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = rbind(cpg_set, cor.sub)
node = 1
correlations = correlations1
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = cor.sub
node = 40
correlations = correlations40
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = rbind(cpg_set, cor.sub)
threshold = 0.4
node = 42
correlations = correlations42
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = rbind(cpg_set, cor.sub)
threshold = 0.5
node = 93
correlations = correlations93
summary(correlations)
cor.sub = correlations[(correlations$correlations >= threshold |
correlations$correlations < -1*threshold), ]
cpg_set = rbind(cpg_set, cor.sub)
cpgs = cpg_set$CpG
ann450k = getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19)
head(ann450k)
anno.sub = ann450k[rownames(ann450k) %in% cpgs, ]
anno.sub = data.frame(anno.sub)
anno.sub = cbind('NodeCor' = cor.sub$correlations, anno.sub)
node = 'All'
file.name = paste('results/anno450K_node', node, '.csv', sep = '')
write.csv(anno.sub, file.name)
file.name = paste('../results/anno450K_node', node, '.csv', sep = '')
write.csv(anno.sub, file.name)
load('human_c2_v5p2.rdata')
setwd('../')
load('human_c2_v5p2.rdata')
par(mfrow=c(1,1))
all = colnames(betas)
gst <- gometh(sig.cpg=cpgs, all.cpg=all, plot.bias=TRUE)
gsa <- gsameth(sig.cpg=cpgs, all.cpg=all, collection=Hs.c2)
go = topGO(gst, number = 10); go
gsa = topGSA(gsa, number=10); gsa
gofile.name = paste('results/go_anno_node', node, '.csv', sep = '')
write.csv(go, gofile.name)
gsafile.name = paste('results/gsa_anno_node', node, '.csv', sep = '')
write.csv(gsa, gsafile.name)
go = topGO(gst, number = 20); go
gsa = topGSA(gsa, number=20); gsa
?topGSA
gsa = topGSA(gsa, number=30); gsa
gsa = topGSA(gsa, number=20); gsa
gofile.name = paste('results/go_anno_node', node, '.csv', sep = '')
write.csv(go, gofile.name)
gsafile.name = paste('results/gsa_anno_node', node, '.csv', sep = '')
write.csv(gsa, gsafile.name)
go = topGO(gst, number = 30); go
gsa = topGSA(gsa, number=20); gsa
gofile.name = paste('results/go_anno_node', node, '.csv', sep = '')
write.csv(go, gofile.name)
gsafile.name = paste('results/gsa_anno_node', node, '.csv', sep = '')
write.csv(gsa, gsafile.name)
gofile.name = paste('results/go_anno_node', node, '.csv', sep = '')
write.csv(go, gofile.name)
gsafile.name = paste('results/gsa_anno_node', node, '.csv', sep = '')
write.csv(gsa, gsafile.name)
cors = correlations1$correlations
cpg = correlations$CpG[1]
cg14789818 = betas[,cpg]
vaeNode = vae[, as.character(node)]
node = 1
vaeNode = vae[, as.character(node)]
df = data.frame(cbind(vaeNode, cg14789818))
ggplot(data = df, aes(x = vaeNode, y = cg14789818)) +
geom_point(fill = '#C7BBC9', pch = 21, size = 5) +
geom_smooth(method ='lm', formula = y~x) +
xlab('VAE node activation') +
ylab('cg14789818 methylation value')  +
ggtitle(paste('Node ', node, sep = ''))
ggplot(data = df, aes(x = vaeNode, y = cg14789818)) +
geom_point(fill = '#C7BBC9', pch = 21, size = 5) +
geom_smooth(method ='lm', formula = y~x) +
xlab('VAE node activation') +
ylab('cg14789818 methylation value')  +
ggtitle(paste('Node ', node, sep = ''))
dev.off()
ggplot(data = df, aes(x = vaeNode, y = cg14789818)) +
geom_point(fill = '#C7BBC9', pch = 21, size = 5) +
geom_smooth(method ='lm', formula = y~x) +
xlab('VAE node activation') +
ylab('cg14789818 methylation value')  +
ggtitle(paste('Node ', node, sep = ''))
View(df)
cors
correlations1$CpG
cpg = correlations1$CpG[1]
cg14789818 = betas[,cpg]
node = 1
vaeNode = vae[, as.character(node)]
df = data.frame(cbind(vaeNode, cg14789818))
ggplot(data = df, aes(x = vaeNode, y = cg14789818)) +
geom_point(fill = '#C7BBC9', pch = 21, size = 5) +
geom_smooth(method ='lm', formula = y~x) +
xlab('VAE node activation') +
ylab('cg14789818 methylation value')  +
ggtitle(paste('Node ', node, sep = ''))
cpg
ggplot(data = df, aes(x = vaeNode, y = cg14789818)) +
geom_point(fill = '#C7BBC9', pch = 21, size = 5) +
geom_smooth(method ='lm', formula = y~x) +
xlab('VAE node activation') +
ylab('cg13985135 methylation value')  +
ggtitle(paste('Node ', node, sep = ''))
View(vae)
View(BRCA.covsSub)
View(df)
ggscatter(df, x = 'vaeNode', y = cg14789818)
ggscatter(df, x = 'vaeNode', y = 'cg14789818')
BRCA.covsSub = BRCA.covsSub[order(BRCA.covsSub$Basename), ]
?order
BRCA.covsSub = BRCA.covsSub[order(BRCA.covsSub$Basename, decreasing=T), ]
all(BRCA.covsSub$Basename == rownames(df))
df = cbind(df, BRCA.covsSub$sample.typeInt)
colnames(df) = c('activation', 'beta', 'sample')
df$sample = factor(df$sample)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sampe')
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample')
cpg
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 1')
file.name = paste('methylation_V_node', node, '.png', sep = '')
png(file.name, width = 1000, height = 1000, res = 100)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 1')
dev.off()
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 1',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n"))
file.name = paste('methylation_V_node', node, '.png', sep = '')
png(file.name, width = 1000, height = 1000, res = 100)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 1',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n"))
dev.off()
node = 40
vaeNode = vae[, as.character(node)]
df = data.frame(cbind(vaeNode, cg14789818))
BRCA.covsSub = BRCA.covsSub[order(BRCA.covsSub$Basename, decreasing=T), ]
all(BRCA.covsSub$Basename == rownames(df))
df = cbind(df, BRCA.covsSub$sample.typeInt)
colnames(df) = c('activation', 'beta', 'sample')
df$sample = factor(df$sample)
file.name = paste('methylation_V_node', node, '.png', sep = '')
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 1',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n"))
file.name = paste('methylation_V_node', node, '.png', sep = '')
png(file.name, width = 1000, height = 1000, res = 100)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n"))
dev.off()
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.sep = "\n"))
file.name = paste('methylation_V_node', node, '.png', sep = '')
png(file.name, width = 1000, height = 1000, res = 100)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.sep = "\n"))
dev.off()
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 1, label.sep = "\n"))
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 1, label.y = 0.5, label.sep = "\n"))
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 0.35, label.y = 0.35, label.sep = "\n"))
file.name = paste('methylation_V_node', node, '.png', sep = '')
png(file.name, width = 1000, height = 1000, res = 100)
ggscatter(df, x = 'activation', y = 'beta',
color = 'sample', ylab = 'CpG cg13985135 beta value',
xlab = 'Activation of node 40',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 0.35, label.y = 0.35, label.sep = "\n"))
dev.off()
rm(list = ls())
working.dir = "C:/Users/atitus/Box Sync/Sync_Folder/00_Research/collaborations/VanCitters"
require("knitr")
opts_knit$set(root.dir = working.dir)
data.file = "subset_relevant_columns_data_csv_Dec2017.csv"
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
weight.file = "AllKnees_with_Patient_Weight.v02.csv"
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
colnames(weight.data)
colnames(data)
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
colnames(weight.data)
data = merge(data, weight.data, by='DBEC)
dsaf
dsaf
data = merge(data, weight.data, by='DBEC')
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
data = merge(data, weight.data, by='DBEC')
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
data.file = "subset_relevant_columns_data_csv_Dec2017.csv"
weight.file = "AllKnees_with_Patient_Weight.v02.csv"
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
data = merge(data, weight.data, by='DBEC')
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
data.file = "subset_relevant_columns_data_csv_Dec2017.csv"
weight.file = "AllKnees_with_Patient_Weight.v02.csv"
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
data = merge(data, weight.data, by='DBEC')
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
1175-1066
#class(data$AgeImpl)
data = data[data$AgeImpl != '',]
data$AgeImpl = as.numeric(as.character(data$AgeImpl))
#class(data$MLDelta)
data = data[data$MLDelta != '#REF!',]
data = data[data$MLDelta != '',]
data$MLDelta = as.numeric(as.character(data$MLDelta))
#table(data$TrayCode)
data = data[data$TrayCode != '', ]
data = data[data$TrayCode != '#REF!', ]
#class(data$Constr01)
data$Constr01 = factor(data$Constr01)
#table(data$PriRev)
data = data[data$PriRev != '', ]
#class(data$SeriesNo)
data$SeriesNo = as.factor(data$SeriesNo)
table(data$SeriesNo)
dim(data) # Number of subjects with full data
data.save = data
data = data.save
cols = c('WearRate', 'Gdr', 'BMI', 'AgeImpl')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'BRGTYPE', 'Xlink', 'SeriesNo', 'Constr01')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'BRGTYPE', 'Mobile', 'Xlink', 'SeriesNo', 'Constr01')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'BRGTYPE', 'Xlink', 'SeriesNo', 'Constr01', 'TrayCode')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'BRGTYPE', 'Mobile', 'Xlink', 'SeriesNo', 'Constr01', 'TrayCode')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'Gdr', 'BMI', 'AgeImpl')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
data$SeriesNo
data.subSer2$Ser2Ind = ifelse(data$SeriesNo == 2 &
data$TrayCode != 0 &
data$Xlink != 0, 0, 1)
data.subSer2 = data
data.subSer2$Ser2Ind = ifelse(data$SeriesNo == 2 &
data$TrayCode != 0 &
data$Xlink != 0, 0, 1)
working.dir = "C:/Users/atitus/Box Sync/Sync_Folder/00_Research/collaborations/VanCitters"
require("knitr")
opts_knit$set(root.dir = working.dir)
data.file = "subset_relevant_columns_data_csv_Dec2017.csv"
weight.file = "AllKnees_with_Patient_Weight.v02.csv"
data = read.csv(paste(working.dir, 'data', data.file, sep = '/'))
weight.data = read.csv(paste(working.dir, 'data', weight.file, sep = '/'))
data = merge(data, weight.data, by='DBEC')
data = data[!is.na(data$filter_.), ]
data = data[data$filter_. == 1, ]
print(dim(data))
#class(data$AgeImpl)
data = data[data$AgeImpl != '',]
data$AgeImpl = as.numeric(as.character(data$AgeImpl))
#class(data$MLDelta)
data = data[data$MLDelta != '#REF!',]
data = data[data$MLDelta != '',]
data$MLDelta = as.numeric(as.character(data$MLDelta))
#table(data$TrayCode)
data = data[data$TrayCode != '', ]
data = data[data$TrayCode != '#REF!', ]
#class(data$Constr01)
data$Constr01 = factor(data$Constr01)
#table(data$PriRev)
data = data[data$PriRev != '', ]
#class(data$SeriesNo)
data$SeriesNo = as.factor(data$SeriesNo)
table(data$SeriesNo)
dim(data) # Number of subjects with full data
data.save = data
data = data.save
cols = c('WearRate', 'Gdr', 'BMI', 'AgeImpl')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
# Univariate
data.subSer2 = data
data.subSer2$Ser2Ind = ifelse(data$SeriesNo == 2 &
data$TrayCode != 0 &
data$Xlink != 0, 0, 1)
cols = c('WearRate', 'BRGTYPE', 'Xlink', 'SeriesNo', 'Constr01')
data.temp = data[, cols]
summary(lm(WearRate~., data = data.temp))
data.subSer2 = data
data.subSer2$Ser2Ind = ifelse(data$SeriesNo == 2 &
data$TrayCode != 0 &
data$Xlink != 0, 0, 1)
data.subSer2 = data.subSer2[data.subSer2$Ser2Ind == 1, ]
cols = c('WearRate', 'SeriesNo')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'BRGTYPE', 'Mobile', 'Xlink', 'SeriesNo', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'DUR', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
cols = c('WearRate', 'DUR', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
data.temp = data.subSer2[, cols]
cols = c('WearRate', 'DUR', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
colnames(data.subSer2)
cols = c('WearRate', 'DUR.x', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
# Univariate analysis
cols = c('WearRate', 'SeriesNo')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
# Univariate analysis
cols = c('WearRate', 'DUR.x', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
# Univariate analysis
cols = c('WearRate', 'DUR.x', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
colnames(data.subSer2)
cols = c('WearRate', 'RfRGroup')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'DUR', 'PriRev', 'MLDelta', 'RfRGroup')
data.temp = data.subSer2[, cols]
cols = c('WearRate', 'DUR.x', 'PriRev', 'MLDelta', 'RfRGroup')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'DUR.x', 'BRGTYPE', 'Gdr', 'BMI', 'PriRev', 'Xlink', 'Mobile', 'SeriesNo', 'AgeImpl', 'Constr01', 'TrayCode', 'RfRGroup')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
colnames(data.subSer2)
cols = c('WearRate', 'Gdr', 'BMI', 'AgeImpl', 'WeightLB')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
cols = c('WearRate', 'Gdr', 'BMI', 'AgeImpl', 'WeightKG')
data.temp = data.subSer2[, cols]
summary(lm(WearRate~., data = data.temp))
